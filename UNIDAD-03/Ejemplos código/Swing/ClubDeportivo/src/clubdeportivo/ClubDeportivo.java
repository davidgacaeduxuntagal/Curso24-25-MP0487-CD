package clubdeportivo;

import java.awt.Color;
import java.awt.Component;
import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Sani
 */
public class ClubDeportivo extends javax.swing.JFrame {
    private DefaultListModel modeloLista = new DefaultListModel();
    private ArrayList<Personal> listaPersonal = new ArrayList<>();
    /**
     * Creates new form VentanaPrincipal2
     */
    public ClubDeportivo() {
        initComponents();
        inicializarModelos();
        // Ocultar componentes:
        jlPlusFijo.setVisible(false);
        jcbPlusFijo.setVisible(false);
    }


    private void inicializarModelos() {
        modeloLista = new DefaultListModel();
        this.jList1.setModel(modeloLista);
    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jbgPosicionJugadores = new javax.swing.ButtonGroup();
        jbgFijoMantenedores = new javax.swing.ButtonGroup();
        jbgCargoDirectivo = new javax.swing.ButtonGroup();
        jtpPersonal = new javax.swing.JTabbedPane();
        jpJugadores = new javax.swing.JPanel();
        jPanelJugadores = new javax.swing.JPanel();
        jlNombreJugador = new javax.swing.JLabel();
        jtNombreJugador = new javax.swing.JTextField();
        jlDNIJugador = new javax.swing.JLabel();
        jtDNIJugador = new javax.swing.JTextField();
        jlDireccionJugador = new javax.swing.JLabel();
        jtDireccionJugador = new javax.swing.JTextField();
        jlTelefonoJugador = new javax.swing.JLabel();
        jtTelefonoJugador = new javax.swing.JTextField();
        jlPosicion = new javax.swing.JLabel();
        jrbPortero = new javax.swing.JRadioButton();
        jrbDefensa = new javax.swing.JRadioButton();
        jrbDelanterio = new javax.swing.JRadioButton();
        jlSueldoJugador = new javax.swing.JLabel();
        jtSueldoJugador = new javax.swing.JTextField();
        jlNacimientoJugador = new javax.swing.JLabel();
        jtNacimientoJugador = new javax.swing.JTextField();
        jlNumeroGoles = new javax.swing.JLabel();
        jtNumeroGoles = new javax.swing.JTextField();
        jlPlusGoles = new javax.swing.JLabel();
        jtPlusGoles = new javax.swing.JTextField();
        jlGanadosJugador = new javax.swing.JLabel();
        jtGanadosJugador = new javax.swing.JTextField();
        jpEntrenadores = new javax.swing.JPanel();
        jPanelEntrenadores = new javax.swing.JPanel();
        jlDNIEntrenador = new javax.swing.JLabel();
        jtDNIEntrenador = new javax.swing.JTextField();
        jlDireccionEntrenador = new javax.swing.JLabel();
        jtDireccionEntrenador = new javax.swing.JTextField();
        jlTelefonoEntrenador = new javax.swing.JLabel();
        jtTelefonoEntrenador = new javax.swing.JTextField();
        jlNombreEntrendaor = new javax.swing.JLabel();
        jtNombreEntrendaor = new javax.swing.JTextField();
        jlSueldoEntrenador = new javax.swing.JLabel();
        jtSueldoEntrenador = new javax.swing.JTextField();
        jlPlusPartidoEntrenador = new javax.swing.JLabel();
        jtPlusPartidoEntrenador = new javax.swing.JTextField();
        jlGanadosEntrenador = new javax.swing.JLabel();
        jtGanadosEntrenador = new javax.swing.JTextField();
        jpMantenedores = new javax.swing.JPanel();
        jPanelMantenedores = new javax.swing.JPanel();
        jlNombreMantenedor = new javax.swing.JLabel();
        jtNombreMantenedor = new javax.swing.JTextField();
        jlDNIMantenedor = new javax.swing.JLabel();
        jtDNIMantenedor = new javax.swing.JTextField();
        jlDireccionMantenedor = new javax.swing.JLabel();
        jtDireccionMantenedor = new javax.swing.JTextField();
        jlTelefonoMantenedor = new javax.swing.JLabel();
        jtTelefonoMantenedor = new javax.swing.JTextField();
        jlSueldoMantenedor = new javax.swing.JLabel();
        jtSueldoMantenedor = new javax.swing.JTextField();
        jlFijo = new javax.swing.JLabel();
        jrbSiFijo = new javax.swing.JRadioButton();
        jrbNoFijo = new javax.swing.JRadioButton();
        jlPlusFijo = new javax.swing.JLabel();
        jcbPlusFijo = new javax.swing.JComboBox<>();
        jpDirectivos = new javax.swing.JPanel();
        jPanelDirectivos = new javax.swing.JPanel();
        jlNombreDirectivo = new javax.swing.JLabel();
        jtNombreDirectivo = new javax.swing.JTextField();
        jlDNIDirectivo = new javax.swing.JLabel();
        jtDNIDirectivo = new javax.swing.JTextField();
        jlDireccionDirectivo = new javax.swing.JLabel();
        jtDireccionDirectivo = new javax.swing.JTextField();
        jlTelefonoDirectivo = new javax.swing.JLabel();
        jtTelefonoDirectivo = new javax.swing.JTextField();
        jrbPresidente = new javax.swing.JRadioButton();
        jrbDelegado = new javax.swing.JRadioButton();
        jlCargo = new javax.swing.JLabel();
        jrbSecretario = new javax.swing.JRadioButton();
        jlSueldoDirectivo = new javax.swing.JLabel();
        jtSueldoDirectivo = new javax.swing.JTextField();
        jcbActivoDirectivo = new javax.swing.JCheckBox();
        jlGanadosDirectivo = new javax.swing.JLabel();
        jtGanadosDirectivo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jmbBarraPrincipal = new javax.swing.JMenuBar();
        jmArchivo = new javax.swing.JMenu();
        jmiGrabar = new javax.swing.JMenuItem();
        jmiBorrarLinea = new javax.swing.JMenuItem();
        jmiVaciarLista = new javax.swing.JMenuItem();
        jmiLlenarLista = new javax.swing.JMenuItem();
        jmESArchivos = new javax.swing.JMenu();
        jmiImportar = new javax.swing.JMenuItem();
        jmiExportar = new javax.swing.JMenuItem();
        jmSalir = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtpPersonal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jtpPersonal.setPreferredSize(new java.awt.Dimension(780, 330));

        jpJugadores.setPreferredSize(new java.awt.Dimension(780, 300));

        jPanelJugadores.setBackground(new java.awt.Color(255, 255, 255));
        jPanelJugadores.setPreferredSize(new java.awt.Dimension(800, 330));

        jlNombreJugador.setText("Nombre:");

        jlDNIJugador.setText("DNI:");

        jlDireccionJugador.setText("Dirección:");

        jlTelefonoJugador.setText("Teléfono:");

        jlPosicion.setText("Posición");

        jbgPosicionJugadores.add(jrbPortero);
        jrbPortero.setSelected(true);
        jrbPortero.setText("Portero");

        jbgPosicionJugadores.add(jrbDefensa);
        jrbDefensa.setText("Defensa");

        jbgPosicionJugadores.add(jrbDelanterio);
        jrbDelanterio.setText("Delantero");

        jlSueldoJugador.setText("Sueldo");

        jlNacimientoJugador.setText("Fecha nacimiento");

        jlNumeroGoles.setText("Número goles");

        jlPlusGoles.setText("Plus goles");

        jlGanadosJugador.setText("Partidos ganados");

        jtGanadosJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtGanadosJugadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelJugadoresLayout = new javax.swing.GroupLayout(jPanelJugadores);
        jPanelJugadores.setLayout(jPanelJugadoresLayout);
        jPanelJugadoresLayout.setHorizontalGroup(
            jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlDNIJugador)
                            .addComponent(jlNombreJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlDireccionJugador)
                            .addComponent(jlTelefonoJugador))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtDNIJugador)
                            .addComponent(jtDireccionJugador, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addComponent(jtTelefonoJugador)
                            .addComponent(jtNombreJugador, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)))
                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jlGanadosJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtGanadosJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                        .addComponent(jlPosicion)
                        .addGap(18, 18, 18)
                        .addComponent(jrbPortero)
                        .addGap(18, 18, 18)
                        .addComponent(jrbDefensa)
                        .addGap(18, 18, 18)
                        .addComponent(jrbDelanterio))
                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlSueldoJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlNacimientoJugador)
                            .addComponent(jlNumeroGoles)
                            .addComponent(jlPlusGoles))
                        .addGap(32, 32, 32)
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtNacimientoJugador, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jtSueldoJugador))
                            .addComponent(jtNumeroGoles, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtPlusGoles, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(165, Short.MAX_VALUE))
        );

        jPanelJugadoresLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jlDNIJugador, jlDireccionJugador, jlNombreJugador, jlTelefonoJugador});

        jPanelJugadoresLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jtDNIJugador, jtDireccionJugador, jtNombreJugador, jtTelefonoJugador});

        jPanelJugadoresLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jlNacimientoJugador, jlNumeroGoles, jlPlusGoles, jlSueldoJugador});

        jPanelJugadoresLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jtNacimientoJugador, jtNumeroGoles, jtPlusGoles});

        jPanelJugadoresLayout.setVerticalGroup(
            jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtNombreJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlPosicion)
                            .addComponent(jrbPortero)
                            .addComponent(jrbDefensa)
                            .addComponent(jrbDelanterio)
                            .addComponent(jlNombreJugador))
                        .addGap(16, 16, 16)
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                                .addComponent(jlSueldoJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlNacimientoJugador))
                            .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                                .addComponent(jtSueldoJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtNacimientoJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlNumeroGoles)
                            .addComponent(jtNumeroGoles, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlDNIJugador)
                            .addComponent(jtDNIJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtDireccionJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlDireccionJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlTelefonoJugador)
                            .addComponent(jtTelefonoJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtPlusGoles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlPlusGoles)
                            .addComponent(jlGanadosJugador)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelJugadoresLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jtGanadosJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jPanelJugadoresLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jlDNIJugador, jlNombreJugador, jlTelefonoJugador, jtDNIJugador, jtDireccionJugador, jtNombreJugador, jtTelefonoJugador});

        jPanelJugadoresLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jlNacimientoJugador, jlNumeroGoles, jlPlusGoles, jlSueldoJugador, jtNacimientoJugador, jtNumeroGoles, jtPlusGoles});

        javax.swing.GroupLayout jpJugadoresLayout = new javax.swing.GroupLayout(jpJugadores);
        jpJugadores.setLayout(jpJugadoresLayout);
        jpJugadoresLayout.setHorizontalGroup(
            jpJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpJugadoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelJugadores, javax.swing.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpJugadoresLayout.setVerticalGroup(
            jpJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpJugadoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelJugadores, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtpPersonal.addTab("Jugadores", jpJugadores);

        jpEntrenadores.setPreferredSize(new java.awt.Dimension(780, 300));

        jPanelEntrenadores.setBackground(new java.awt.Color(255, 255, 255));
        jPanelEntrenadores.setPreferredSize(new java.awt.Dimension(780, 300));

        jlDNIEntrenador.setText("DNI:");

        jlDireccionEntrenador.setText("Dirección:");

        jlTelefonoEntrenador.setText("Teléfono:");

        jtTelefonoEntrenador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtTelefonoEntrenadorActionPerformed(evt);
            }
        });

        jlNombreEntrendaor.setText("Nombre:");

        jlSueldoEntrenador.setText("Sueldo");

        jlPlusPartidoEntrenador.setText("Plus partido ganado");

        jlGanadosEntrenador.setText("Partidos ganados");

        jtGanadosEntrenador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtGanadosEntrenadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelEntrenadoresLayout = new javax.swing.GroupLayout(jPanelEntrenadores);
        jPanelEntrenadores.setLayout(jPanelEntrenadoresLayout);
        jPanelEntrenadoresLayout.setHorizontalGroup(
            jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEntrenadoresLayout.createSequentialGroup()
                .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelEntrenadoresLayout.createSequentialGroup()
                        .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelEntrenadoresLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jlNombreEntrendaor, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEntrenadoresLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlDNIEntrenador, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jlDireccionEntrenador, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jlTelefonoEntrenador, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(28, 28, 28)
                        .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtDireccionEntrenador)
                            .addComponent(jtDNIEntrenador)
                            .addComponent(jtTelefonoEntrenador, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(jtNombreEntrendaor))
                        .addGap(81, 81, 81)
                        .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlPlusPartidoEntrenador)
                            .addComponent(jlSueldoEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtSueldoEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtPlusPartidoEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelEntrenadoresLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jlGanadosEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtGanadosEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(108, Short.MAX_VALUE))
        );

        jPanelEntrenadoresLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jlDNIEntrenador, jlDireccionEntrenador, jlNombreEntrendaor, jlTelefonoEntrenador});

        jPanelEntrenadoresLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jtPlusPartidoEntrenador, jtSueldoEntrenador});

        jPanelEntrenadoresLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jlPlusPartidoEntrenador, jlSueldoEntrenador});

        jPanelEntrenadoresLayout.setVerticalGroup(
            jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEntrenadoresLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelEntrenadoresLayout.createSequentialGroup()
                        .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlSueldoEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtSueldoEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlPlusPartidoEntrenador)
                            .addComponent(jtPlusPartidoEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelEntrenadoresLayout.createSequentialGroup()
                        .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtNombreEntrendaor)
                            .addComponent(jlNombreEntrendaor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtDNIEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlDNIEntrenador))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtDireccionEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlDireccionEntrenador))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtTelefonoEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlTelefonoEntrenador))
                        .addGap(34, 34, 34)))
                .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtGanadosEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlGanadosEntrenador))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanelEntrenadoresLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jlDNIEntrenador, jlDireccionEntrenador, jlTelefonoEntrenador});

        jPanelEntrenadoresLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jtDNIEntrenador, jtDireccionEntrenador, jtNombreEntrendaor, jtTelefonoEntrenador});

        jPanelEntrenadoresLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jlPlusPartidoEntrenador, jlSueldoEntrenador, jtPlusPartidoEntrenador, jtSueldoEntrenador});

        javax.swing.GroupLayout jpEntrenadoresLayout = new javax.swing.GroupLayout(jpEntrenadores);
        jpEntrenadores.setLayout(jpEntrenadoresLayout);
        jpEntrenadoresLayout.setHorizontalGroup(
            jpEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEntrenadoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelEntrenadores, javax.swing.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpEntrenadoresLayout.setVerticalGroup(
            jpEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEntrenadoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelEntrenadores, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtpPersonal.addTab("Entrenadores", jpEntrenadores);

        jpMantenedores.setPreferredSize(new java.awt.Dimension(780, 300));

        jPanelMantenedores.setBackground(new java.awt.Color(255, 255, 255));
        jPanelMantenedores.setPreferredSize(new java.awt.Dimension(780, 300));

        jlNombreMantenedor.setText("Nombre:");

        jlDNIMantenedor.setText("DNI:");

        jlDireccionMantenedor.setText("Dirección:");

        jlTelefonoMantenedor.setText("Teléfono:");

        jtTelefonoMantenedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtTelefonoMantenedorActionPerformed(evt);
            }
        });

        jlSueldoMantenedor.setText("Sueldo");

        jlFijo.setText("Fijo");

        jbgFijoMantenedores.add(jrbSiFijo);
        jrbSiFijo.setText("Sí");
        jrbSiFijo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbSiFijoActionPerformed(evt);
            }
        });

        jbgFijoMantenedores.add(jrbNoFijo);
        jrbNoFijo.setSelected(true);
        jrbNoFijo.setText("No");
        jrbNoFijo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbNoFijoActionPerformed(evt);
            }
        });

        jlPlusFijo.setText("Plus");

        jcbPlusFijo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "50.0", "100.00", "150.00", "200.00", " ", " " }));

        javax.swing.GroupLayout jPanelMantenedoresLayout = new javax.swing.GroupLayout(jPanelMantenedores);
        jPanelMantenedores.setLayout(jPanelMantenedoresLayout);
        jPanelMantenedoresLayout.setHorizontalGroup(
            jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlDNIMantenedor)
                    .addComponent(jlDireccionMantenedor)
                    .addComponent(jlTelefonoMantenedor)
                    .addComponent(jlNombreMantenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtNombreMantenedor)
                    .addComponent(jtDireccionMantenedor)
                    .addComponent(jtDNIMantenedor)
                    .addComponent(jtTelefonoMantenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlSueldoMantenedor, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jlFijo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                        .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtSueldoMantenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jrbNoFijo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                        .addComponent(jrbSiFijo)
                        .addGap(18, 18, 18)
                        .addComponent(jlPlusFijo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jcbPlusFijo, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(145, 145, 145))
        );

        jPanelMantenedoresLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jlDNIMantenedor, jlDireccionMantenedor, jlNombreMantenedor, jlTelefonoMantenedor});

        jPanelMantenedoresLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jlFijo, jlSueldoMantenedor});

        jPanelMantenedoresLayout.setVerticalGroup(
            jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                        .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtNombreMantenedor)
                            .addComponent(jtSueldoMantenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                                .addComponent(jtDNIMantenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtDireccionMantenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtTelefonoMantenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                                .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jlPlusFijo)
                                    .addComponent(jrbSiFijo)
                                    .addComponent(jcbPlusFijo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jrbNoFijo))))
                    .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                        .addComponent(jlNombreMantenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlDNIMantenedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlDireccionMantenedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlTelefonoMantenedor))
                    .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                        .addComponent(jlSueldoMantenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jlFijo)))
                .addContainerGap(84, Short.MAX_VALUE))
        );

        jPanelMantenedoresLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jlDNIMantenedor, jlDireccionMantenedor, jlNombreMantenedor, jlTelefonoMantenedor, jtDNIMantenedor, jtDireccionMantenedor, jtNombreMantenedor, jtTelefonoMantenedor});

        jPanelMantenedoresLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jcbPlusFijo, jlFijo, jlPlusFijo, jlSueldoMantenedor, jrbNoFijo, jrbSiFijo, jtSueldoMantenedor});

        javax.swing.GroupLayout jpMantenedoresLayout = new javax.swing.GroupLayout(jpMantenedores);
        jpMantenedores.setLayout(jpMantenedoresLayout);
        jpMantenedoresLayout.setHorizontalGroup(
            jpMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMantenedoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelMantenedores, javax.swing.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpMantenedoresLayout.setVerticalGroup(
            jpMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMantenedoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelMantenedores, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtpPersonal.addTab("Mantenedores", jpMantenedores);

        jpDirectivos.setPreferredSize(new java.awt.Dimension(780, 300));

        jPanelDirectivos.setBackground(new java.awt.Color(255, 255, 255));
        jPanelDirectivos.setPreferredSize(new java.awt.Dimension(780, 300));

        jlNombreDirectivo.setText("Nombre:");

        jlDNIDirectivo.setText("DNI:");

        jlDireccionDirectivo.setText("Dirección:");

        jlTelefonoDirectivo.setText("Teléfono:");

        jtTelefonoDirectivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtTelefonoDirectivoActionPerformed(evt);
            }
        });

        jbgCargoDirectivo.add(jrbPresidente);
        jrbPresidente.setSelected(true);
        jrbPresidente.setText("Presidente");

        jbgCargoDirectivo.add(jrbDelegado);
        jrbDelegado.setText("Delegado");

        jlCargo.setText("Cargo:");

        jbgCargoDirectivo.add(jrbSecretario);
        jrbSecretario.setText("Secretario");

        jlSueldoDirectivo.setText("Sueldo:");

        jtSueldoDirectivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtSueldoDirectivoActionPerformed(evt);
            }
        });

        jcbActivoDirectivo.setText("Activo");

        jlGanadosDirectivo.setText("Partidos ganados");

        jtGanadosDirectivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtGanadosDirectivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDirectivosLayout = new javax.swing.GroupLayout(jPanelDirectivos);
        jPanelDirectivos.setLayout(jPanelDirectivosLayout);
        jPanelDirectivosLayout.setHorizontalGroup(
            jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlDireccionDirectivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlTelefonoDirectivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlNombreDirectivo, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                            .addComponent(jlDNIDirectivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                                .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtDireccionDirectivo)
                                    .addComponent(jtDNIDirectivo)
                                    .addComponent(jtNombreDirectivo))
                                .addGap(70, 70, 70)
                                .addComponent(jlCargo)
                                .addGap(18, 18, 18)
                                .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                                        .addComponent(jrbPresidente)
                                        .addGap(67, 67, 67)
                                        .addComponent(jcbActivoDirectivo))
                                    .addComponent(jrbDelegado)
                                    .addComponent(jrbSecretario)))
                            .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                                .addComponent(jtTelefonoDirectivo, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(jlSueldoDirectivo)
                                .addGap(18, 18, 18)
                                .addComponent(jtSueldoDirectivo, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jlGanadosDirectivo, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtGanadosDirectivo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 150, Short.MAX_VALUE))
        );

        jPanelDirectivosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jlDNIDirectivo, jlDireccionDirectivo, jlNombreDirectivo, jlTelefonoDirectivo});

        jPanelDirectivosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jtDNIDirectivo, jtDireccionDirectivo, jtNombreDirectivo, jtTelefonoDirectivo});

        jPanelDirectivosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jrbDelegado, jrbPresidente, jrbSecretario});

        jPanelDirectivosLayout.setVerticalGroup(
            jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlNombreDirectivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtNombreDirectivo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtDNIDirectivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlDNIDirectivo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtDireccionDirectivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlDireccionDirectivo)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDirectivosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrbPresidente)
                            .addComponent(jlCargo)
                            .addComponent(jcbActivoDirectivo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jrbDelegado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jrbSecretario)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtTelefonoDirectivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlTelefonoDirectivo)
                        .addComponent(jlSueldoDirectivo))
                    .addComponent(jtSueldoDirectivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtGanadosDirectivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlGanadosDirectivo))
                .addGap(22, 22, 22))
        );

        jPanelDirectivosLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jlDNIDirectivo, jlDireccionDirectivo, jlNombreDirectivo, jlTelefonoDirectivo, jtDNIDirectivo, jtDireccionDirectivo, jtNombreDirectivo, jtTelefonoDirectivo});

        jPanelDirectivosLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jrbDelegado, jrbPresidente, jrbSecretario});

        javax.swing.GroupLayout jpDirectivosLayout = new javax.swing.GroupLayout(jpDirectivos);
        jpDirectivos.setLayout(jpDirectivosLayout);
        jpDirectivosLayout.setHorizontalGroup(
            jpDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpDirectivosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDirectivos, javax.swing.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpDirectivosLayout.setVerticalGroup(
            jpDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDirectivosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDirectivos, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtpPersonal.addTab("Directivos", jpDirectivos);

        jList1.setBorder(javax.swing.BorderFactory.createMatteBorder(10, 10, 10, 10, new java.awt.Color(204, 204, 204)));
        jScrollPane1.setViewportView(jList1);

        jmArchivo.setText("Archivo");
        jmArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmArchivoActionPerformed(evt);
            }
        });

        jmiGrabar.setText("Grabar");
        jmiGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGrabarActionPerformed(evt);
            }
        });
        jmArchivo.add(jmiGrabar);

        jmiBorrarLinea.setText("Borrar Línea");
        jmiBorrarLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiBorrarLineaActionPerformed(evt);
            }
        });
        jmArchivo.add(jmiBorrarLinea);

        jmiVaciarLista.setText("Vaciar Lista");
        jmiVaciarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiVaciarListaActionPerformed(evt);
            }
        });
        jmArchivo.add(jmiVaciarLista);

        jmiLlenarLista.setText("Llenar Lista");
        jmiLlenarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiLlenarListaActionPerformed(evt);
            }
        });
        jmArchivo.add(jmiLlenarLista);

        jmbBarraPrincipal.add(jmArchivo);

        jmESArchivos.setText("E/S archivos");

        jmiImportar.setText("Importar");
        jmiImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiImportarActionPerformed(evt);
            }
        });
        jmESArchivos.add(jmiImportar);

        jmiExportar.setText("Exportar");
        jmiExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExportarActionPerformed(evt);
            }
        });
        jmESArchivos.add(jmiExportar);

        jmbBarraPrincipal.add(jmESArchivos);

        jmSalir.setText("Salir");
        jmSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmSalirActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jmSalir.add(jMenuItem1);

        jmbBarraPrincipal.add(jmSalir);

        setJMenuBar(jmbBarraPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jtpPersonal, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtpPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtTelefonoMantenedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtTelefonoMantenedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtTelefonoMantenedorActionPerformed

    private void jtTelefonoEntrenadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtTelefonoEntrenadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtTelefonoEntrenadorActionPerformed

    private void jtSueldoDirectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtSueldoDirectivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtSueldoDirectivoActionPerformed

    private void jmiExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExportarActionPerformed
        // TODO add your handling code here:
        try (FileOutputStream fos = new FileOutputStream("datosPersonal.dat"); 
             ObjectOutputStream oos = new ObjectOutputStream(fos);) {
            try {
                oos.writeObject(listaPersonal);
            } catch (EOFException e) {
                    System.out.println("Error escribiendo en el fichero");
                    JOptionPane.showMessageDialog(null, "Error escribiendo en el fichero",
                             "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (FileNotFoundException e) {
            System.out.println("No se encuentra el fichero");
        } catch (IOException e) {
            System.out.println("Error en la lectura");
        } 
    }//GEN-LAST:event_jmiExportarActionPerformed

    private void jtTelefonoDirectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtTelefonoDirectivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtTelefonoDirectivoActionPerformed

    private void jrbSiFijoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbSiFijoActionPerformed
        // TODO add your handling code here:
        jlPlusFijo.setVisible(true);
        jcbPlusFijo.setVisible(true);
    }//GEN-LAST:event_jrbSiFijoActionPerformed

    private void jmSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmSalirActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jmSalirActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
         int res = JOptionPane.showConfirmDialog(null, "Deseas cerrar el programa?",
                "Salir de la aplicación", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if (res == JOptionPane.OK_OPTION)
          this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jtGanadosEntrenadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtGanadosEntrenadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtGanadosEntrenadorActionPerformed

    private void jtGanadosDirectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtGanadosDirectivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtGanadosDirectivoActionPerformed

    private void jtGanadosJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtGanadosJugadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtGanadosJugadorActionPerformed

    private void jmiGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGrabarActionPerformed
        // TODO add your handling code here:
        String pestanaActual = jtpPersonal.getTitleAt(jtpPersonal.getSelectedIndex());
        switch ( pestanaActual ) {
            case "Jugadores": // Jugador
                // Comprobar si algún campo vacío
                if( hayCamposEnBlanco(jPanelJugadores) )
                    return;
             
                // Validar campos numéricos
                if ( !validarCampos(pestanaActual) ) {
                    return;
                }
                
                // Añadir objeto a JList:
                String posicion = jrbPortero.isSelected() ? "portero" : (jrbDefensa.isSelected() ? "defensa" : "delantero");          
                                
                listaPersonal.add(
                    new Jugador(
                        jtNombreJugador.getText(),
                        jtDNIJugador.getText(),
                        jtDireccionJugador.getText(),
                        jtTelefonoJugador.getText(),
                        Integer.parseInt(jtGanadosJugador.getText()),
                        posicion,
                        Double.parseDouble(jtSueldoJugador.getText()),
                        obtenerFechaValida(jtNacimientoJugador.getText()),
                        Double.parseDouble(jtGanadosJugador.getText()),
                        Integer.parseInt(jtNumeroGoles.getText()),
                        Double.parseDouble(jtPlusGoles.getText())
                    ));
                modeloLista.addElement(listaPersonal.getLast());               
                break;            
                
            case "Entrenadores": // Entrenador
                if( hayCamposEnBlanco(jPanelEntrenadores) )
                    return;                
                 
                // Validar campos numéricos
                if ( !validarCampos(pestanaActual) ) {
                    return;
                }
              
                // Añadir objeto a JList: 
                listaPersonal.add(
                    new Entrenador(
                        jtNombreEntrendaor.getText(),
                        jtDNIEntrenador.getText(),
                        jtDireccionEntrenador.getText(),
                        jtTelefonoEntrenador.getText(),
                        Integer.parseInt(jtGanadosEntrenador.getText()),
                        Double.parseDouble(jtSueldoEntrenador.getText()),
                        Double.parseDouble(jtPlusPartidoEntrenador.getText())
                    ));         
                modeloLista.addElement(listaPersonal.getLast());               
                break;
                
                
            case "Mantenedores": // Mantenedor
                // Comprobar si algún campo vacío
                if( hayCamposEnBlanco(jPanelMantenedores) )
                    return;      
                   
                // Validar campos numéricos
                if ( !validarCampos(pestanaActual) ) {
                    return;
                }
                              
                // Añadir objeto a JList:
                Double plusFijo =  jrbSiFijo.isSelected() ? Double.valueOf(jcbPlusFijo.getSelectedItem().toString()) : 0.0;
                listaPersonal.add(
                    new Mantenedor(
                        jtNombreMantenedor.getText(),
                        jtDNIMantenedor.getText(),
                        jtDireccionMantenedor.getText(),
                        jtTelefonoMantenedor.getText(),
                        0,  // para un mantenedor no tiene significado este campo
                        Double.parseDouble(jtSueldoMantenedor.getText()),
                        jrbSiFijo.isSelected(),
                        plusFijo
                    ));
                modeloLista.addElement(listaPersonal.getLast());               

                break;
                
            case "Directivos": // Directivo
               // Comprobar si algún campo vacío
                if( hayCamposEnBlanco(jPanelDirectivos) )
                    return;                      
                
                // Validar campos numéricos
                if ( !validarCampos(pestanaActual) ) {
                    return;
                }

                // Añadir objeto a JList:
                String cargo = jrbPresidente.isSelected() ? "presidente" : (jrbDelegado.isSelected() ? "delegado" : "secretario");
                listaPersonal.add(
                    new Directivo(
                        jtNombreDirectivo.getText(),
                        jtDNIDirectivo.getText(),
                        jtDireccionDirectivo.getText(),
                        jtTelefonoDirectivo.getText(),
                        Integer.parseInt(jtGanadosDirectivo.getText()),
                        cargo,
                        Double.valueOf(jtSueldoMantenedor.getText()),
                        jcbActivoDirectivo.isSelected()
                    ));     
                modeloLista.addElement(listaPersonal.getLast());              
                break;
        }
    }//GEN-LAST:event_jmiGrabarActionPerformed

    private void jrbNoFijoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbNoFijoActionPerformed
        // TODO add your handling code here:
        jlPlusFijo.setVisible(false);
        jcbPlusFijo.setVisible(false);
    }//GEN-LAST:event_jrbNoFijoActionPerformed

    private void jmArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jmArchivoActionPerformed

    private void jmiImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiImportarActionPerformed
        // TODO add your handling code here:
        try (FileInputStream fis = new FileInputStream("datosPersonal.dat"); 
             ObjectInputStream ois = new ObjectInputStream(fis);) {
            try {
                listaPersonal = (ArrayList<Personal>) ois.readObject();
            } catch (EOFException e) {
                System.out.println("Error leyendo la información del fichero");
                JOptionPane.showMessageDialog(null, "Error leyendo la información del fichero",
                         "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (FileNotFoundException e) {
            System.out.println("No se encuentra el fichero");
        } catch (IOException e) {
            System.out.println("Error en la lectura");
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            System.out.println("Error de conversión de datos");
        }
    }//GEN-LAST:event_jmiImportarActionPerformed

    private void jmiVaciarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiVaciarListaActionPerformed
        // TODO add your handling code here:
        modeloLista.clear();
        // listaPersonal.clear();
    }//GEN-LAST:event_jmiVaciarListaActionPerformed

    private void jmiLlenarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiLlenarListaActionPerformed
        // TODO add your handling code here:
        modeloLista.clear();
        for(Personal personal: listaPersonal) {
            modeloLista.addElement((personal));
        }
    }//GEN-LAST:event_jmiLlenarListaActionPerformed

    private void jmiBorrarLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiBorrarLineaActionPerformed
        // TODO add your handling code here:
        if(jList1.getSelectedIndex() != -1) {
           listaPersonal.remove(jList1.getSelectedIndex());            
           modeloLista.remove(jList1.getSelectedIndex());

        }
    }//GEN-LAST:event_jmiBorrarLineaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClubDeportivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClubDeportivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClubDeportivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClubDeportivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClubDeportivo().setVisible(true);
            }
        });
    }

    // ---------------------------------------------------------------------
    // Funciones auxiliares
    // ---------------------------------------------------------------------    
    private boolean esDniValido(String dni) {
        Pattern patron = Pattern.compile("[0-9]{7,8}[A-Z a-z]");
        Matcher comprobador = patron.matcher(dni);
        // MEJORA: comprobar si la letra es correcta usando fórmula letra DNI
        return comprobador.matches();
    }    
    
    private boolean esTelefonoValido(String telefono) {
        Pattern patron = Pattern.compile("(\\+[0-9]{2})*([0-9]{9,10})");
        Matcher comprobador = patron.matcher(telefono);
        return comprobador.matches();
    }        
    
    private Date obtenerFechaValida(String cadenaFecha) {
        final SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
       
        sdf.setLenient(false);
        try {
            return (Date) sdf.parse(cadenaFecha);
        } catch (ParseException e) {
            System.out.println("ERROR: fecha no válidoa");
        }      
        
        return null;
    }
    
    private boolean esCantidadValida(String cantidad) {
        boolean esValida = false;
        try {
            Double.valueOf(cantidad);
            esValida = true;            
        }catch (NumberFormatException e){
            System.out.println("ERROR: Cantidad invalida");
        }
        return esValida;
    }
    
    private boolean esEnteroValido(String numero) {
        boolean esValido = false;
        try {
            esValido = Integer.parseInt(numero) >= 0;            
        }catch (NumberFormatException e){
            System.out.println("ERROR: Número invalido");
        }
        return esValido;
    }
    
    private boolean hayCamposEnBlanco(JPanel jp) {
        for (Component componente : jp.getComponents()) {
            if (componente instanceof JTextField) {
                JTextField jtf = (JTextField)componente;
                if ( jtf.getText().isBlank() ) {
                    JOptionPane.showMessageDialog(null, "Hay campos vacíos: rellénelos por favor",
                     "Aviso", JOptionPane.WARNING_MESSAGE);
                    return true;
                }
            }
        }    
        
        return false;
    }
    
    private void ponerFondoBlancoJTextFields(JPanel jp) {
        for (Component componente : jp.getComponents()) {
             if (componente instanceof JTextField) {
                 JTextField jtf = (JTextField)componente;
                     jtf.setBackground(Color.WHITE);    
             }
     }   
    }
    
    private boolean validarCampos(String pestanaSeleccionada) {
        switch ( pestanaSeleccionada) {
            case "Jugadores": // Jugador            
                ponerFondoBlancoJTextFields(jPanelJugadores);                

                if ( !esDniValido(jtDNIJugador.getText()) ) {
                    jtDNIJugador.setBackground(Color.red);                    
                    jtDNIJugador.requestFocus();
                    return false;
                }
                
                if ( !esTelefonoValido(jtTelefonoJugador.getText()) ) {
                    jtTelefonoJugador.setBackground(Color.red);                    
                    jtTelefonoJugador.requestFocus();
                    return false;
                }                

                if ( !esEnteroValido(jtGanadosJugador.getText()) ) {
                    jtGanadosJugador.setBackground(Color.red);                    
                    jtGanadosJugador.requestFocus();
                    return false;
                }
                
                if ( !esCantidadValida(jtSueldoJugador.getText()) ) {
                    jtSueldoJugador.setBackground(Color.red);                    
                    jtSueldoJugador.requestFocus();
                    return false;
                }
                
                if ( obtenerFechaValida(jtNacimientoJugador.getText()) == null ) {
                    jtNacimientoJugador.setBackground(Color.red);                    
                    jtNacimientoJugador.requestFocus();
                    return false;
                }

                if ( !esEnteroValido(jtNumeroGoles.getText()) ) {
                    jtNumeroGoles.setBackground(Color.red);                    
                    jtNumeroGoles.requestFocus();
                    return false;
                }

                if ( !esCantidadValida(jtPlusGoles.getText()) ) {
                    jtPlusGoles.setBackground(Color.red);                    
                    jtPlusGoles.requestFocus();
                    return false;
                }
                
                return true;           
                // break;            
                
            case "Entrenadores": // Entrenador
                ponerFondoBlancoJTextFields(jPanelEntrenadores);                
               
                if ( !esDniValido(jtDNIEntrenador.getText()) ) {
                    jtDNIEntrenador.setBackground(Color.red);                    
                    jtDNIEntrenador.requestFocus();
                    return false;
                }
                
                if ( !esTelefonoValido(jtTelefonoEntrenador.getText()) ) {
                    jtTelefonoJugador.setBackground(Color.red);                    
                    jtTelefonoJugador.requestFocus();
                    return false;
                }                

                if ( !esEnteroValido(jtGanadosEntrenador.getText()) ) {
                    jtGanadosEntrenador.setBackground(Color.red);                    
                    jtGanadosEntrenador.requestFocus();
                    return false;
                }
                
                if ( !esCantidadValida(jtSueldoEntrenador.getText()) ) {
                    jtSueldoEntrenador.setBackground(Color.red);                    
                    jtSueldoEntrenador.requestFocus();
                    return false;
                }
                
                if ( !esCantidadValida(jtPlusPartidoEntrenador.getText()) ) {
                    jtPlusPartidoEntrenador.setBackground(Color.red);                    
                    jtPlusPartidoEntrenador.requestFocus();
                    return false;
                }
              
                return true;
                // break;
                
                
            case "Mantenedores": // Mantenedor
                ponerFondoBlancoJTextFields(jPanelMantenedores);                
               
                if ( !esDniValido(jtDNIMantenedor.getText()) ) {
                    jtDNIMantenedor.setBackground(Color.red);                    
                    jtDNIMantenedor.requestFocus();
                    return false;
                }
                
                if ( !esTelefonoValido(jtTelefonoMantenedor.getText()) ) {
                    jtTelefonoMantenedor.setBackground(Color.red);                    
                    jtTelefonoMantenedor.requestFocus();
                    return false;
                }                

                if ( !esCantidadValida(jtSueldoMantenedor.getText()) ) {
                    jtSueldoMantenedor.setBackground(Color.red);                    
                    jtSueldoMantenedor.requestFocus();
                    return false;
                }
                              
                return true;    
                // break;
                
            case "Directivos": // Directivo
                //   Poner fondo en blanco...
                ponerFondoBlancoJTextFields(jPanelDirectivos);
               
                if ( !esDniValido(jtDNIDirectivo.getText()) ) {
                    jtDNIDirectivo.setBackground(Color.red);                    
                    jtDNIDirectivo.requestFocus();
                    return false;
                }
                
                if ( !esTelefonoValido(jtTelefonoDirectivo.getText()) ) {
                    jtTelefonoDirectivo.setBackground(Color.red);                    
                    jtTelefonoDirectivo.requestFocus();
                    return false;
                }                

                if ( !esEnteroValido(jtGanadosDirectivo.getText()) ) {
                    jtGanadosDirectivo.setBackground(Color.red);                    
                    jtGanadosDirectivo.requestFocus();
                    return false;
                }
                
                if ( !esCantidadValida(jtSueldoDirectivo.getText()) ) {
                    jtSueldoDirectivo.setBackground(Color.red);                    
                    jtSueldoDirectivo.requestFocus();
                    return false;
                }
                
                return true;
        }           
        
        return false; // valor no cubierto: no valida
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanelDirectivos;
    private javax.swing.JPanel jPanelEntrenadores;
    private javax.swing.JPanel jPanelJugadores;
    private javax.swing.JPanel jPanelMantenedores;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.ButtonGroup jbgCargoDirectivo;
    private javax.swing.ButtonGroup jbgFijoMantenedores;
    private javax.swing.ButtonGroup jbgPosicionJugadores;
    private javax.swing.JCheckBox jcbActivoDirectivo;
    private javax.swing.JComboBox<String> jcbPlusFijo;
    private javax.swing.JLabel jlCargo;
    private javax.swing.JLabel jlDNIDirectivo;
    private javax.swing.JLabel jlDNIEntrenador;
    private javax.swing.JLabel jlDNIJugador;
    private javax.swing.JLabel jlDNIMantenedor;
    private javax.swing.JLabel jlDireccionDirectivo;
    private javax.swing.JLabel jlDireccionEntrenador;
    private javax.swing.JLabel jlDireccionJugador;
    private javax.swing.JLabel jlDireccionMantenedor;
    private javax.swing.JLabel jlFijo;
    private javax.swing.JLabel jlGanadosDirectivo;
    private javax.swing.JLabel jlGanadosEntrenador;
    private javax.swing.JLabel jlGanadosJugador;
    private javax.swing.JLabel jlNacimientoJugador;
    private javax.swing.JLabel jlNombreDirectivo;
    private javax.swing.JLabel jlNombreEntrendaor;
    private javax.swing.JLabel jlNombreJugador;
    private javax.swing.JLabel jlNombreMantenedor;
    private javax.swing.JLabel jlNumeroGoles;
    private javax.swing.JLabel jlPlusFijo;
    private javax.swing.JLabel jlPlusGoles;
    private javax.swing.JLabel jlPlusPartidoEntrenador;
    private javax.swing.JLabel jlPosicion;
    private javax.swing.JLabel jlSueldoDirectivo;
    private javax.swing.JLabel jlSueldoEntrenador;
    private javax.swing.JLabel jlSueldoJugador;
    private javax.swing.JLabel jlSueldoMantenedor;
    private javax.swing.JLabel jlTelefonoDirectivo;
    private javax.swing.JLabel jlTelefonoEntrenador;
    private javax.swing.JLabel jlTelefonoJugador;
    private javax.swing.JLabel jlTelefonoMantenedor;
    private javax.swing.JMenu jmArchivo;
    private javax.swing.JMenu jmESArchivos;
    private javax.swing.JMenu jmSalir;
    private javax.swing.JMenuBar jmbBarraPrincipal;
    private javax.swing.JMenuItem jmiBorrarLinea;
    private javax.swing.JMenuItem jmiExportar;
    private javax.swing.JMenuItem jmiGrabar;
    private javax.swing.JMenuItem jmiImportar;
    private javax.swing.JMenuItem jmiLlenarLista;
    private javax.swing.JMenuItem jmiVaciarLista;
    private javax.swing.JPanel jpDirectivos;
    private javax.swing.JPanel jpEntrenadores;
    private javax.swing.JPanel jpJugadores;
    private javax.swing.JPanel jpMantenedores;
    private javax.swing.JRadioButton jrbDefensa;
    private javax.swing.JRadioButton jrbDelanterio;
    private javax.swing.JRadioButton jrbDelegado;
    private javax.swing.JRadioButton jrbNoFijo;
    private javax.swing.JRadioButton jrbPortero;
    private javax.swing.JRadioButton jrbPresidente;
    private javax.swing.JRadioButton jrbSecretario;
    private javax.swing.JRadioButton jrbSiFijo;
    private javax.swing.JTextField jtDNIDirectivo;
    private javax.swing.JTextField jtDNIEntrenador;
    private javax.swing.JTextField jtDNIJugador;
    private javax.swing.JTextField jtDNIMantenedor;
    private javax.swing.JTextField jtDireccionDirectivo;
    private javax.swing.JTextField jtDireccionEntrenador;
    private javax.swing.JTextField jtDireccionJugador;
    private javax.swing.JTextField jtDireccionMantenedor;
    private javax.swing.JTextField jtGanadosDirectivo;
    private javax.swing.JTextField jtGanadosEntrenador;
    private javax.swing.JTextField jtGanadosJugador;
    private javax.swing.JTextField jtNacimientoJugador;
    private javax.swing.JTextField jtNombreDirectivo;
    private javax.swing.JTextField jtNombreEntrendaor;
    private javax.swing.JTextField jtNombreJugador;
    private javax.swing.JTextField jtNombreMantenedor;
    private javax.swing.JTextField jtNumeroGoles;
    private javax.swing.JTextField jtPlusGoles;
    private javax.swing.JTextField jtPlusPartidoEntrenador;
    private javax.swing.JTextField jtSueldoDirectivo;
    private javax.swing.JTextField jtSueldoEntrenador;
    private javax.swing.JTextField jtSueldoJugador;
    private javax.swing.JTextField jtSueldoMantenedor;
    private javax.swing.JTextField jtTelefonoDirectivo;
    private javax.swing.JTextField jtTelefonoEntrenador;
    private javax.swing.JTextField jtTelefonoJugador;
    private javax.swing.JTextField jtTelefonoMantenedor;
    private javax.swing.JTabbedPane jtpPersonal;
    // End of variables declaration//GEN-END:variables
}
